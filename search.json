[{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"how-to-create-aagi-style-graphics-and-tables","dir":"Articles","previous_headings":"","what":"How to Create AAGI Style Graphics and Tables","title":"AAGIThemes","text":"CCDM CBADA team developed R package, {AAGIThemes}, R cookbook help ease process creating publication-ready graphics -house style using R’s {graphics}, {ggplot2} {flextable} libraries reproducible process, well making easier people new R create beautiful graphics tables adhere AAGI style guidelines.","code":""},{"path":[]},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"install-the-aagithemes-package","dir":"Articles","previous_headings":"Getting started","what":"Install the {AAGIThemes} package","title":"AAGIThemes","text":"{AAGIThemes} CRAN, install directly GitHub repository using {remotes}. {remotes} package installed, run first line code well. info {AAGIThemes} check package’s GitHub repository, details use package functions detailed . downloaded package successfully installed good go create plots tables.","code":"if (!require(\"remotes\"))   remotes::install_github(\"AAGI-Org-AU-Public/AAGIThemes\",                           build_vignettes = TRUE))"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"creating-tables","dir":"Articles","previous_headings":"","what":"Creating Tables","title":"AAGIThemes","text":"Creating AAGI themed tables requires using {flextable}. Using airquality data set, adding text column illustrate text columns handled, ’s apply AAGI theme table. Ozone Solar.R Wind Temp Month Day Month Name 41 190 7.4 67 5 1 May 36 118 8.0 72 5 2 May 12 149 12.6 74 5 3 May 18 313 11.5 62 5 4 May   14.3 56 5 5 May 28  14.9 66 5 6 May","code":"library(\"AAGIThemes\") library(\"flextable\") library(\"dplyr\") #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  ft <- flextable(head(airquality) |>                    mutate(`Month Name` = \"May\")) ft <- theme_ft_aagi(ft) ft"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"on-ggplot2-plots-and-graphs","dir":"Articles","previous_headings":"Creating Tables","what":"On {ggplot2} Plots and Graphs","title":"AAGIThemes","text":"focus {AAGIThemes} given supporting {ggplot2} visualisations, {base} {graphics} plotting functionality also supported. focus given {ggplot2} verbose efficient creating data visualization based “Grammar Graphics” (Wilkinson 2012). layered grammar makes developing charts structural easy interpret (know use {ggplot2} course). One greatest strengths {ggplot2} ability customise easily. Several themes colour palettes already exist {ggplot2} Create visualisation look professional engaging end users. {AAGIThemes} leverages ability customise appearance {ggplot2} create theme clean, easy use follows AAGI’s style guidelines including fonts colours. using {AAGIThemes} graphs, legend placed top default main sub-titles left aligned captions right aligned. choices can overridden using ggplot2::theme() arguments wish.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"load-the-libraries-well-need","dir":"Articles","previous_headings":"Creating Tables","what":"Load the Libraries We’ll Need","title":"AAGIThemes","text":"steps cookbook - create charts R general - require certain packages installed loaded. load one one, can use following code load .","code":"x <-   c(\"dplyr\",     \"gapminder\",     \"ggplot2\",     \"AAGIPalettes\",     \"AAGIThemes\",     \"tibble\") invisible(lapply(   X = x,   FUN = library,   character.only = TRUE ))"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"using-aagithemes-to-create-graphical-outputs","dir":"Articles","previous_headings":"","what":"Using {AAGIThemes} to Create Graphical Outputs","title":"AAGIThemes","text":"{AAGIThemes} provides several functions assist users creating plots, charts graphs unified AAGI style. Following examples four major styles graphs commonly used, bar plots, boxplots, histograms lines scatter plots.","code":""},{"path":[]},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"using-base-r-to-create-a-bar-plot","dir":"Articles","previous_headings":"Using {AAGIThemes} to Create Graphical Outputs > Bar Plots","what":"Using Base R to Create a bar plot","title":"AAGIThemes","text":"","code":"barplot_aagi(islands)"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"using-ggplot2-to-create-a-bar-plot","dir":"Articles","previous_headings":"Using {AAGIThemes} to Create Graphical Outputs > Bar Plots","what":"Using {ggplot2} to Create a Bar Plot","title":"AAGIThemes","text":"need transform named vector data.frame {ggplot2} able use , ’ll create {tibble} first, islands_df plot .  Although names bit difficult read x-axis, can flip coordinates easier read.","code":"islands_df <- tibble(name = names(islands), value = islands)  ggplot(data = islands_df, aes(x = name, y = value)) +   geom_col() +   theme_aagi() +   theme(axis.text.x = element_text(angle = 90, hjust = 1)) ggplot(data = islands_df, aes(x = name, y = value)) +   geom_col() +   theme_aagi() +   coord_flip()"},{"path":[]},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"using-base-r-to-create-a-boxplot","dir":"Articles","previous_headings":"Using {AAGIThemes} to Create Graphical Outputs > Boxplots","what":"Using Base R to Create a Boxplot","title":"AAGIThemes","text":"","code":"boxplot_aagi(decrease ~ treatment,             data = OrchardSprays,             xlab = \"treatment\",             ylab = \"decrease\")"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"using-ggplot2-to-create-a-boxplot","dir":"Articles","previous_headings":"Using {AAGIThemes} to Create Graphical Outputs > Boxplots","what":"Using {ggplot2} to Create a Boxplot","title":"AAGIThemes","text":"","code":"library(\"AAGIThemes\") library(\"ggplot2\")  ggplot(data = OrchardSprays, aes(x = treatment, y = decrease)) +   geom_boxplot() +   scale_y_continuous(breaks = seq(0, 120, by = 20)) +   theme_aagi()"},{"path":[]},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"using-base-r-to-create-a-histogram","dir":"Articles","previous_headings":"Using {AAGIThemes} to Create Graphical Outputs > Histograms","what":"Using Base R to Create a Histogram","title":"AAGIThemes","text":"","code":"library(\"ggplot2\") # for diamonds data set hist_aagi(diamonds$carat) #> Warning in plot.window(xlim, ylim, \"\", ...): \"panel.first\" is not a graphical #> parameter #> Warning in title(main = main, sub = sub, xlab = xlab, ylab = ylab, ...): #> \"panel.first\" is not a graphical parameter #> Warning in axis(1, ...): \"panel.first\" is not a graphical parameter #> Warning in axis(2, at = yt, ...): \"panel.first\" is not a graphical parameter"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"using-ggplot2-to-create-a-histogram","dir":"Articles","previous_headings":"Using {AAGIThemes} to Create Graphical Outputs > Histograms","what":"Using {ggplot2} to Create a Histogram","title":"AAGIThemes","text":"","code":"ggplot(data = diamonds, aes(x = carat)) +   geom_histogram() +   theme_aagi() #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"line-graphs","dir":"Articles","previous_headings":"Using {AAGIThemes} to Create Graphical Outputs","what":"Line Graphs","title":"AAGIThemes","text":"Using {gapminder} data, can make following figure life expectancy time Malawi line AAGI’s turquoise colour.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"using-base-r-to-create-a-line-graph","dir":"Articles","previous_headings":"Using {AAGIThemes} to Create Graphical Outputs > Line Graphs","what":"Using Base R to Create a Line Graph","title":"AAGIThemes","text":"","code":"# Data for chart from {gapminder} package line_df <- gapminder |>   filter(country == \"Malawi\") |>   arrange(year)  plot_aagi(   x = line_df$year,   y = line_df$lifeExp,   col = AAGIPalettes::colour_as_hex(\"AAGI Teal\"),   type = \"l\",   main = \"Living longer\",   xlab = \"Year\",   ylab = \"Life expectancy\",   sub = \"Life expectancy in Malawi 1952-2007\" )"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"using-ggplot2-to-create-a-line-graph","dir":"Articles","previous_headings":"Using {AAGIThemes} to Create Graphical Outputs > Line Graphs","what":"Using {ggplot2} to Create a Line Graph","title":"AAGIThemes","text":"","code":"ggplot(line_df, aes(x = year, y = lifeExp)) +   geom_line(colour = AAGIPalettes::colour_as_hex(\"AAGI Teal\")) +   theme_aagi() +   ylab(\"Life expectancy\") +   xlab(\"Year\") +   labs(title = \"Living longer\",       subtitle = \"Life expectancy in Malawi 1952-2007\")"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"scatterplots","dir":"Articles","previous_headings":"Using {AAGIThemes} to Create Graphical Outputs","what":"Scatterplots","title":"AAGIThemes","text":"","code":"# Create data data = data.frame(   x = seq(1:100) + 0.1 * seq(1:100) * sample(c(1:10), 100 , replace = TRUE),   y = seq(1:100) + 0.2 * seq(1:100) * sample(c(1:10), 100 , replace = TRUE) )"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"using-base-r-to-create-a-scatterplot","dir":"Articles","previous_headings":"Using {AAGIThemes} to Create Graphical Outputs > Scatterplots","what":"Using base R to Create a Scatterplot","title":"AAGIThemes","text":"","code":"# Basic scatterplot plot_aagi(x = data$x, y = data$y)"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"using-ggplot2-to-create-a-scatterplot","dir":"Articles","previous_headings":"Using {AAGIThemes} to Create Graphical Outputs > Scatterplots","what":"Using {ggplot2} to Create a Scatterplot","title":"AAGIThemes","text":"","code":"ggplot(data = data, aes(x = x, y = y)) +   geom_point() +   theme_aagi()"},{"path":[]},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"aagi-colours","dir":"Articles","previous_headings":"Colours in {AAGIThemes}","what":"AAGI Colours","title":"AAGIThemes","text":"{AAGIThemes} imports official AAGI colours use plots also applies {ggplot2} facet strips uses MS Word PowerPoint templates colour matching outputs {AAGIPalettes}.","code":"library(AAGIPalettes) display_aagi_cols(\"aagi_colours\")"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"using-aagi-colours","dir":"Articles","previous_headings":"Colours in {AAGIThemes}","what":"Using AAGI Colours","title":"AAGIThemes","text":"’ve already seen line graph example use colours graph. demonstration, examples. ’ll use {gapminder} data construct stacked bar chart use AAGI’s colours scale_fill_manual().","code":"#prepare data stacked_df <- gapminder |>   filter(year == 2007) |>   mutate(lifeExpGrouped = cut(     lifeExp,     breaks = c(0, 50, 65, 80, 90),     labels = c(\"Under 50\", \"50-65\", \"65-80\", \"80+\")   )) |>   group_by(continent, lifeExpGrouped) |>   summarise(continentPop = sum(as.numeric(pop))) #> `summarise()` has grouped output by 'continent'. You can override using the #> `.groups` argument.  #set order of stacks by changing factor levels stacked_df$lifeExpGrouped = factor(stacked_df$lifeExpGrouped,                                   levels = rev(levels(stacked_df$lifeExpGrouped)))  #create plot ggplot(data = stacked_df,       aes(x = continent,           y = continentPop,           fill = lifeExpGrouped)) +   geom_bar(stat = \"identity\",           position = \"fill\") +   scale_fill_manual(name = \"Life expectancy\",                     values = aagi_palettes(n = 4, name = \"aagi_greens\")) +   ylab(\"Continental Population (%)\") +   xlab(\"Continent\") +   theme_aagi() +   scale_y_continuous(labels = scales::percent) +   geom_hline(yintercept = 0,             linewidth = 1,             colour = \"#474747\") +   labs(title = \"How life expectancy varies\",       subtitle = \"% of population by life expectancy band, 2007\") +   guides(fill = guide_legend(reverse = TRUE))"},{"path":[]},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"using-ggplot2-faceting","dir":"Articles","previous_headings":"Advanced Uses","what":"Using {ggplot2} Faceting","title":"AAGIThemes","text":"’ll using figure next example, ’ll generate object R called p save R’s tempdir() use next example well.","code":"#Prepare data facet <- gapminder |>   filter(continent != \"Americas\") |>   group_by(continent, year) |>   summarise(pop = sum(as.numeric(pop))) #> `summarise()` has grouped output by 'continent'. You can override using the #> `.groups` argument.  col_values <- c(   AAGIPalettes::colour_as_hex(\"AAGI Teal\"),   AAGIPalettes::colour_as_hex(\"AAGI Green\"),   AAGIPalettes::colour_as_hex(\"AAGI Yellow\"),   AAGIPalettes::colour_as_hex(\"AAGI Blue\") )  #Make plot p <- ggplot() +   geom_area(data = facet, aes(x = year, y = pop, fill = continent)) +   scale_fill_manual(values = col_values) +   facet_wrap(~ continent, ncol = 5) +   scale_y_continuous(breaks = c(0, 2000000000, 4000000000),                     labels = c(0, \"2bn\", \"4bn\")) +   theme_aagi() +   geom_hline(yintercept = 0,             linewidth = 1,             colour = \"#474747\") +   theme(legend.position = \"none\", axis.text.x = element_blank()) +   labs(title = \"Asia's rapid growth\", subtitle = \"Population growth by continent, 1952-2007\")  ggsave(p, filename = \"AAGI.png\", path = tempdir()) #> Saving 7.5 x 5 in image  print(p)"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"adding-the-aagi-logo-to-your-figures","dir":"Articles","previous_headings":"Advanced Uses","what":"Adding the AAGI Logo to Your Figures","title":"AAGIThemes","text":"Add AAGI logo upper left previous plot per style guide. Use add_aagi_logo() function add logo automatically previously saved image file. case, previous example used show faceting colours saved R’s tempdir(). can save using tempdir() illustrated save Documents folder elsewhere access well. image resized 600x1000 pixels displayed . Feel free adjust necessary.","code":"library(magick) add_aagi_logo(file_in = file.path(tempdir(), \"AAGI.png\"),               file_out = file.path(tempdir(), \"AAGI_logo.png\"))  image_read(file.path(tempdir(), \"AAGI_logo.png\")) |>    image_resize(\"600x1000\") |>    print() #> # A tibble: 1 × 7 #>   format width height colorspace matte filesize density #>   <chr>  <int>  <int> <chr>      <lgl>    <int> <chr>   #> 1 PNG      600    480 sRGB       FALSE        0 118x118"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"saving-ggplot2-figures","dir":"Articles","previous_headings":"","what":"Saving {ggplot2} Figures","title":"AAGIThemes","text":"saving figures generated {ggplot2} use {AAGIThemes} theme, PDFs properly embed Proxima Nova font used. order save figures preserve font, can either save .png file use device option ggsave(), demonstrated follows.","code":"ggsave(   filename = \"cairo_font.pdf\",   plot = p,   device = cairo_pdf,   path = tempdir() ) #> Saving 7.5 x 5 in image"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"cairo-instructions-for-macos","dir":"Articles","previous_headings":"Saving {ggplot2} Figures","what":"Cairo Instructions for macOS","title":"AAGIThemes","text":"already Cairo graphics library installed install R, unless use Homebrew version, e.g., brew install r. can verify Cairo support running capabilities() function; TRUE show cairo: see TRUE “cairo”, check ’ve installed version R using Homebrew cask, different brew install r, installs vanilla version R built R team using rig, https://github.com/r-lib/rig, manage R installation ’re just installing default R binary. , need install R-specific Cairo libraries anything work. However, need X11 window system first, like XQuartz. can install XQuartz like .","code":"capabilities() #>        jpeg         png        tiff       tcltk         X11        aqua  #>        TRUE        TRUE        TRUE        TRUE       FALSE       FALSE  #>    http/ftp     sockets      libxml        fifo      cledit       iconv  #>        TRUE        TRUE       FALSE        TRUE       FALSE        TRUE  #>         NLS       Rprof     profmem       cairo         ICU long.double  #>        TRUE        TRUE        TRUE        TRUE        TRUE        TRUE  #>     libcurl  #>        TRUE $ brew install xquartz"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/articles/AAGIThemes.html","id":"cairo-instructions-for-windows","dir":"Articles","previous_headings":"Saving {ggplot2} Figures","what":"Cairo Instructions for Windows","title":"AAGIThemes","text":"already Cairo graphics library installed install R. need anything else Create work platform.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adam H. Sparks. Author, maintainer. Kenyon Ng. Author. Jimmy Ng. Contributor. Tinula Kariyawasam. Author. Matt Cowgill. Author.           Wrote major portions package saving charts                     'Grattan' package, adapted 'AAGIThemes' 'MIT'                     licence. Mackey. Author.           Wrote major portions package saving charts                     'Grattan' package, adapted 'AAGIThemes' 'MIT'                     licence. Curtin University Technology. Copyright holder.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sparks , Ng K, Kariyawasam T, Cowgill M, Mackey W (2024). AAGIThemes: AAGI Branding Graphical Tabular Outputs. R package version 0.0.1, https://aagi-org-au-public.github.io/AAGIThemes/, https://github.com/AAGI-Org-AU-Public/AAGIThemes.","code":"@Manual{,   title = {AAGIThemes: AAGI Branding for Graphical and Tabular Outputs},   author = {Adam H. Sparks and Kenyon Ng and Tinula Kariyawasam and Matt Cowgill and Will Mackey},   year = {2024},   note = {R package version 0.0.1,     https://aagi-org-au-public.github.io/AAGIThemes/},   url = {https://github.com/AAGI-Org-AU-Public/AAGIThemes}, }"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/index.html","id":"aagithemes-aagi-branding-for-r-graphical-and-tabular-outputs-","dir":"","previous_headings":"","what":"AAGI Branding for Graphical and Tabular Outputs","title":"AAGI Branding for Graphical and Tabular Outputs","text":"repository contains code R package {AAGIThemes}, installed R session (local RStudio Server), provides helper functions creating exporting graphics created R unified style follows AAGI brand guidelines. goal {AAGIThemes} provide easy use theming R graphics AAGI team members. Following AAGI’s brand guidelines, AAGI colours used applicable font defaults Proxima Nova. resulting graphs, plots charts feature x y axis meet 0 gridlines, can optionally set appear. resulting maps theme_aagi_map() feature white canvas legend right.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/index.html","id":"installation-instructions","dir":"","previous_headings":"","what":"Installation instructions","title":"AAGI Branding for Graphical and Tabular Outputs","text":"can install {AAGIThemes} like :","code":"if (!requireNamespace(\"remotes\", quietly = TRUE)) {   install.packages(\"remotes\") } remotes::install_github(\"AAGI-Org-AU-Public/AAGIThemes\",                         build_vignettes = TRUE,                         dependencies = TRUE )"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"AAGI Branding for Graphical and Tabular Outputs","text":"Following quick examples {AAGIThemes} functionality. However, may wish browse vignette detailed look package offers using:","code":"vignette(\"Cookbook\", package = \"AAGIThemes\")"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/index.html","id":"create-tabular-outputs","dir":"","previous_headings":"Quick start","what":"Create Tabular Outputs","title":"AAGI Branding for Graphical and Tabular Outputs","text":"{AAGIThemes} provides {flextable} theme suited AAGI style works HTML Word document outputs. can use like .  {AAGIThemes} provides {gt} theme suited AAGI style works best HTML outputs. can use like .","code":"library(AAGIThemes) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(flextable) ft <- flextable(head(airquality) |>  mutate(`Month Name` = \"May\")) ft <- theme_ft_aagi(ft) ft library(AAGIThemes) library(dplyr) library(gt) gt <- head(airquality) |>  mutate(`Month Name` = \"May\") |>  gt() gt <- theme_gt_aagi(gt) gt"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/index.html","id":"plots-and-graphs","dir":"","previous_headings":"Quick start","what":"Plots and graphs","title":"AAGI Branding for Graphical and Tabular Outputs","text":"{AAGIThemes} provides several functions assist users creating plots, charts graphs unified AAGI style. creating standalone graphs using R’s base library : barplot_aagi(), boxplot_aagi(), hist_aagi(), plot_aagi().","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/index.html","id":"using-the-basic-plot-functions","dir":"","previous_headings":"Quick start > Plots and graphs","what":"Using the basic plot functions","title":"AAGI Branding for Graphical and Tabular Outputs","text":"Example base graphics functionality AAGI style pre-applied used:  See respective function’s help files {AAGIThemes} cookbook examples documentation.","code":"library(AAGIThemes) boxplot_aagi(decrease ~ treatment,               data = OrchardSprays,               xlab = \"treatment\",               ylab = \"decrease\")"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/index.html","id":"using-with-ggplot2","dir":"","previous_headings":"Quick start > Plots and graphs","what":"Using With {ggplot2}","title":"AAGI Branding for Graphical and Tabular Outputs","text":"function theme_aagi() provided apply unified style creating AAGI themed plots, charts graphs using {ggplot2}. function basic provides one parameter, base_size, used set font size (points) used resulting figure. adjustments made type graph produced, may wish add gridlines change colour palette used alter point line colours graph. Example theme_aagi() used standard {ggplot2} workflow:","code":"library(AAGIThemes) library(ggplot2)  ggplot(data = OrchardSprays, aes(x = treatment, y = decrease)) +   geom_boxplot() +   scale_y_continuous(breaks = seq(0, 120, by = 20)) +   theme_aagi()"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/AAGIThemes-package.html","id":null,"dir":"Reference","previous_headings":"","what":"AAGIThemes: AAGI Branding for Graphical and Tabular Outputs — AAGIThemes-package","title":"AAGIThemes: AAGI Branding for Graphical and Tabular Outputs — AAGIThemes-package","text":"Applies 'AAGI' external brand guidelines graphics. 'AAGI' colours font guidelines applied useful reasonable base graphics, 'ggplot2' figures 'flextable' objects.","code":""},{"path":[]},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/AAGIThemes-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AAGIThemes: AAGI Branding for Graphical and Tabular Outputs — AAGIThemes-package","text":"Maintainer: Adam H. Sparks adam.sparks@dpird.wa.gov.au (ORCID) Authors: Kenyon Ng kenyon.ng@dpird.wa.gov.au (ORCID) Tinula Kariyawasam tinula.kariyawasam@dpird.wa.gov.au Matt Cowgill matthew.cowgill@grattaninstitute.edu.au (Wrote major portions package saving charts  'Grattan' package, adapted 'AAGIThemes' 'MIT'  licence.) Mackey william.mackey@grattaninstitute.edu.au (Wrote major portions package saving charts  'Grattan' package, adapted 'AAGIThemes' 'MIT'  licence.) contributors: Jimmy Ng jimmy.ng@dpird.wa.gov.au [contributor] Curtin University Technology [copyright holder]","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/add_aagi_logo.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert AAGI's Logo Into Any Graphic File — add_aagi_logo","title":"Insert AAGI's Logo Into Any Graphic File — add_aagi_logo","text":"Insert AAGI logo graphical image.  Particularly well- suited use files created AAGIThemes.  logo inserted upper-left image size least 4.6 cm per AAGI brand guidelines.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/add_aagi_logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert AAGI's Logo Into Any Graphic File — add_aagi_logo","text":"","code":"add_aagi_logo(file_in, file_out, logo_scale = 2.5)"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/add_aagi_logo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert AAGI's Logo Into Any Graphic File — add_aagi_logo","text":"file_in Path graphical file import add AAGI logo apply logo . file_out File name create disk .png format image. logo_scale Scaling logo.  Defaults 2.5, larger sizes may beneficial larger graphical images normal reporting sharing. Care taken logo follows AAGI branding guidelines size remains least 4.6 cm.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/add_aagi_logo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Insert AAGI's Logo Into Any Graphic File — add_aagi_logo","text":"Adam Sparks, adam.sparks@curtin.edu.au","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/add_aagi_logo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert AAGI's Logo Into Any Graphic File — add_aagi_logo","text":"","code":"library(\"ggplot2\")  p1 <- ggplot(mtcars) +   geom_point(aes(     x = wt,     y = mpg,     colour = factor(gear)    )) +   facet_wrap(~ am) +   theme_aagi()  ggsave(p1, filename = \"AAGI.png\", path = tempdir()) #> Saving 6.67 x 6.67 in image  add_aagi_logo(file_in = file.path(tempdir(), \"AAGI.png\"),                file_out = file.path(tempdir(), \"AAGI_logo.png\")) #> Loading required namespace: rsvg  x <- magick::image_read(file.path(tempdir(), \"AAGI_logo.png\")) print(x) #> # A tibble: 1 × 7 #>   format width height colorspace matte filesize density #>   <chr>  <int>  <int> <chr>      <lgl>    <int> <chr>   #> 1 PNG     1999   2299 sRGB       FALSE    72735 118x118"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/barplot_aagi.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Barplots Using a Unified AAGI Style and Typography — barplot_aagi","title":"Basic Barplots Using a Unified AAGI Style and Typography — barplot_aagi","text":"Basic barplots follow standard AAGI style including typography guidelines uses (hopefully) sensible defaults.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/barplot_aagi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic Barplots Using a Unified AAGI Style and Typography — barplot_aagi","text":"","code":"barplot_aagi(height, col = \"AAGI Black\", ...)"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/barplot_aagi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic Barplots Using a Unified AAGI Style and Typography — barplot_aagi","text":"height Either vector matrix values describing bars make plot.  height vector, plot consists sequence rectangular bars heights given values vector.  height matrix beside FALSE bar plot corresponds column height, values column giving heights stacked sub-bars making bar.  height matrix beside TRUE, values column juxtaposed rather stacked. col Colour use fill bars  Defaults \"AAGI Black\", dark grey.  Can supplied named AAGI colour; e.g., \"AAGI Black\"; named colour, \"black\"; hexadecimal code, \"#414042\". ... Arguments passed methods, graphical parameters (see graphics::par()).","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/barplot_aagi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Basic Barplots Using a Unified AAGI Style and Typography — barplot_aagi","text":"Adam Sparks, adam.sparks@curtin.edu.au","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/barplot_aagi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic Barplots Using a Unified AAGI Style and Typography — barplot_aagi","text":"","code":"barplot_aagi(islands)"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/boxplot_aagi.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Boxplots Using a Unified AAGI Style and Typography — boxplot_aagi","title":"Basic Boxplots Using a Unified AAGI Style and Typography — boxplot_aagi","text":"Basic boxplots follow AAGI colour typography guidelines uses (hopefully) sensible defaults.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/boxplot_aagi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic Boxplots Using a Unified AAGI Style and Typography — boxplot_aagi","text":"","code":"boxplot_aagi(   x,   main = \"\",   sub = \"\",   xlab = \"\",   ylab = \"\",   col = \"white\",   pch = 16,   ... )"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/boxplot_aagi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic Boxplots Using a Unified AAGI Style and Typography — boxplot_aagi","text":"x specifying data boxplots produced. Either numeric vector, single list containing vectors. Additional unnamed arguments specify data separate vectors (corresponding component boxplot).  NAs allowed data. main Main title.  Optional, supplied blank. sub Sub title x-axis label.  Optional, supplied blank. xlab X-axis label.  Optional. ylab Y-axis label.  Optional. col Colour use fill boxes  Defaults white.  Can supplied named AAGI colour, e.g., \"AAGI Orange\"; named colour, \"Orange\"; hexadecimal code, \"#ec8525\". pch plotting ‘character’, .e., symbol use. can either single character integer code one set graphics symbols. full set S symbols available pch = 0:18, see examples . (NB: R uses circles instead octagons used S.) Value pch = \".\" (equivalently pch = 46) handled specially. rectangle side 0.01 inch (scaled cex). addition, cex = 1 (default), side least one pixel (1/72 inch grDevices::pdf(), grDevices::postscript() grDevices::xfig() devices). text symbols, cex = 1 corresponds default font size device, often specified argument pointsize. pch 0:25 default size 75% character height (see par(\"cin\")). ... Arguments passed methods, graphical parameters (see graphics::par()).","code":""},{"path":[]},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/boxplot_aagi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Basic Boxplots Using a Unified AAGI Style and Typography — boxplot_aagi","text":"Adam Sparks, adam.sparks@curtin.edu.au","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/boxplot_aagi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic Boxplots Using a Unified AAGI Style and Typography — boxplot_aagi","text":"","code":"boxplot_aagi(decrease ~ treatment,   data = OrchardSprays,   xlab = \"treatment\",   ylab = \"decrease\" )"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/hist_aagi.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Histograms Using a Unified AAGI Style and Typography — hist_aagi","title":"Basic Histograms Using a Unified AAGI Style and Typography — hist_aagi","text":"Basic histograms follow standard AAGI style including typography guidelines uses (hopefully) sensible defaults.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/hist_aagi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic Histograms Using a Unified AAGI Style and Typography — hist_aagi","text":"","code":"hist_aagi(   x,   main = \"\",   sub = \"\",   xlab = \"\",   ylab = \"Count\",   breaks = \"pretty\",   col = AAGIPalettes::aagi_colours[\"AAGI Black\"],   ... )"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/hist_aagi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic Histograms Using a Unified AAGI Style and Typography — hist_aagi","text":"x vector values histogram desired. main Main title.  Optional, supplied blank. sub Sub title x-axis label.  Optional, supplied blank. xlab X-axis label.  Optional, supplied taken data. ylab Y-axis label.  Optional, supplied default \"Count\". breaks Either pretty, default, exact.  Pretty uses Scott's Rule, whereas exact uses bin-width 1 value represented individually bar. col Colour use fill bars  Defaults dark grey. ... Arguments passed methods, graphical parameters (see graphics::par()).","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/hist_aagi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Basic Histograms Using a Unified AAGI Style and Typography — hist_aagi","text":"Scott, D.W. (1979) optimal data-based histograms. Biometrika, 66, 605–610. Hyndman, R.J., Problem Sturges' Rule Constructing Histograms, 1995, Monash University, https://www.robjhyndman.com/papers/sturges.pdf.","code":""},{"path":[]},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/hist_aagi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Basic Histograms Using a Unified AAGI Style and Typography — hist_aagi","text":"Adam Sparks, adam.sparks@curtin.edu.au","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/hist_aagi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic Histograms Using a Unified AAGI Style and Typography — hist_aagi","text":"","code":"hist_aagi(islands) #> Warning: \"panel.first\" is not a graphical parameter #> Warning: \"panel.first\" is not a graphical parameter #> Warning: \"panel.first\" is not a graphical parameter #> Warning: \"panel.first\" is not a graphical parameter"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/plot_aagi.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic X-Y Plotting Using a Unified AAGI Style and Typography — plot_aagi","title":"Basic X-Y Plotting Using a Unified AAGI Style and Typography — plot_aagi","text":"Basic X-Y plotting follows AAGI colour typography guidelines uses (hopefully) sensible defaults.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/plot_aagi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic X-Y Plotting Using a Unified AAGI Style and Typography — plot_aagi","text":"","code":"plot_aagi(   x,   y = NULL,   type = \"p\",   xlim = NULL,   ylim = NULL,   main = NULL,   sub = NULL,   xlab = NULL,   ylab = NULL,   col = \"AAGI Black\",   pch = 16,   ... )"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/plot_aagi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic X-Y Plotting Using a Unified AAGI Style and Typography — plot_aagi","text":"x Values plotted x-axis. y Values used y-axis.  Optional. type type plot drawn.  Defaults p points“  See Section \"Type\" . xlim Numeric value x-axis limits.  Optional. ylim Numeric value y-axis limits.  Optional. main Main title text. sub Subtitle text x-axis label. xlab X-axis label.  Optional, blank default data supplied label. ylab Y-axis label.  Optional, blank default data supplied label one available. col Colour use points  Defaults \"AAGI Black\", dark grey.  Can supplied named AAGI colour; e.g., \"AAGI Black\"; named colour, \"black\"; hexadecimal code, \"#414042\". pch plotting ‘character’, .e., symbol use. can either single character integer code one set graphics symbols. full set S symbols available pch = 0:18, see examples . (NB: R uses circles instead octagons used S.) ... Arguments passed methods, graphical parameters (see graphics::par()).  commonly used argument type type plot drawn.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/plot_aagi.html","id":"type","dir":"Reference","previous_headings":"","what":"Type","title":"Basic X-Y Plotting Using a Unified AAGI Style and Typography — plot_aagi","text":"Possible types : “p” points “l” lines “b” “c” lines part alone “b” “o” ‘overplotted’ “h” ‘histogram’ like (‘high-density’) vertical lines “s” stair steps “n” plotting Value pch = \".\" (equivalently pch = 46) handled specially. rectangle side 0.01 inch (scaled cex). addition, cex = 1 (default), side least one pixel (1/72 inch grDevices::pdf(), grDevices::postscript() grDevices::xfig() devices). text symbols, cex = 1 corresponds default fontsize device, often specified argument pointsize. pch 0:25 default size 75% character height (see par(\"cin\")).","code":""},{"path":[]},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/plot_aagi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Basic X-Y Plotting Using a Unified AAGI Style and Typography — plot_aagi","text":"Adam Sparks, adam.sparks@curtin.edu.au","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/plot_aagi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic X-Y Plotting Using a Unified AAGI Style and Typography — plot_aagi","text":"","code":"library(datasets)  plot_aagi(airquality$Ozone,   main = \"Air Quality\",   xlab = \"Ozone\" )   plot_aagi(pressure)"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/theme_aagi.html","id":null,"dir":"Reference","previous_headings":"","what":"A ggplot2 Theme Using a Unified AAGI Style and Typography for Plots — theme_aagi","title":"A ggplot2 Theme Using a Unified AAGI Style and Typography for Plots — theme_aagi","text":"theme follows standard AAGI style including typography guidelines uses (hopefully) sensible defaults ggplot2 graphics.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/theme_aagi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A ggplot2 Theme Using a Unified AAGI Style and Typography for Plots — theme_aagi","text":"","code":"theme_aagi(   base_size = 9,   major_grid = FALSE,   minor_grid = FALSE,   border = FALSE,   ... )"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/theme_aagi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A ggplot2 Theme Using a Unified AAGI Style and Typography for Plots — theme_aagi","text":"base_size Numeric.  figure's base size, set 12 default. presentations using larger base_size make fonts larger suitable presentation slides, e.g., base_size = 24. major_grid Boolean.  Include major gridlines panel.  Defaults FALSE major gridlines, including facets included. minor_grid Boolean.  Include minor gridlines panel.  Defaults FALSE minor gridlines included. border Boolean. Include border around figure four sides, .e., x-axis, y-axis, top right sides black border just x-axis y-axis.  Defaults FALSE x-axis y-axis outlined dark grey. ... arguments passed along ggplot2::theme().","code":""},{"path":[]},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/theme_aagi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A ggplot2 Theme Using a Unified AAGI Style and Typography for Plots — theme_aagi","text":"Adam Sparks, adam.sparks@curtin.edu.au","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/theme_aagi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A ggplot2 Theme Using a Unified AAGI Style and Typography for Plots — theme_aagi","text":"","code":"library(\"ggplot2\")  # Plotting discrete values p1 <- ggplot(mtcars) +   geom_point(aes(     x = wt,     y = mpg,     colour = factor(gear)    )) +   facet_wrap(~ am)  p1 + theme_aagi()   # Plotting continuous values df <- reshape2::melt(outer(1:4, 1:4), varnames = c(\"X1\", \"X2\"))  p2 <- ggplot(df, aes(X1, X2)) + geom_tile(aes(fill = value)) +   geom_point(aes(size = value)) p2 + theme_aagi()   # Using a larger base size for presentation slides p1 + theme_aagi(base_size = 24)   # Plotting using minor gridlines p1 + theme_aagi(minor_gridlines = TRUE)   # Plotting using major gridlines p1 + theme_aagi(major_gridlines = TRUE)   p1 + theme_aagi(border = TRUE)   # Plotting with both gridlines and border p1 + theme_aagi(minor_gridlines = TRUE,                        major_gridlines = TRUE,                        border = TRUE)"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/theme_ft_aagi.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply AAGI Theme to a flextable Object — theme_ft_aagi","title":"Apply AAGI Theme to a flextable Object — theme_ft_aagi","text":"Apply theme AAGI flextable.  AAGI formatted table body grey teal header white header font.  Header text bold, text columns left aligned, columns right aligned.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/theme_ft_aagi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply AAGI Theme to a flextable Object — theme_ft_aagi","text":"","code":"theme_ft_aagi(x)"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/theme_ft_aagi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply AAGI Theme to a flextable Object — theme_ft_aagi","text":"x flextable object","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/theme_ft_aagi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply AAGI Theme to a flextable Object — theme_ft_aagi","text":"formatted flextable object","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/theme_ft_aagi.html","id":"behaviour","dir":"Reference","previous_headings":"","what":"Behaviour","title":"Apply AAGI Theme to a flextable Object — theme_ft_aagi","text":"Theme functions like ggplot2 themes. applied existing table immediately. add row footer, new row formatted theme. theme function applies theme existing elements function called. theme functions applied elements table added (mainly additional header footer rows). want automatically apply theme function flextable object, can use theme_fun argument flextable::set_flextable_defaults(); aware theme function applied last instruction calling flextable::flextable() – add headers footers array, formatted theme. can also use post_process_html argument flextable::set_flextable_defaults() (post_process_pdf, post_process_docx, post_process_pptx) specify theme applied systematically flextable::flextable() printed; case, forget take care theme override formatting done print statement.","code":""},{"path":[]},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/theme_ft_aagi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply AAGI Theme to a flextable Object — theme_ft_aagi","text":"Ozone Solar.R Wind Temp Month Day Month Name 41 190 7.4 67 5 1 May 36 118 8.0 72 5 2 May 12 149 12.6 74 5 3 May 18 313 11.5 62 5 4 May   14.3 56 5 5 May 28  14.9 66 5 6 May","code":"library(flextable) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union ft <- flextable(head(airquality) |> mutate(`Month Name` = \"May\")) ft <- theme_ft_aagi(ft) ft .cl-46e648bc{}.cl-46e03486{font-family:'Arial';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(255, 255, 255, 1.00);background-color:transparent;}.cl-46e03490{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(65, 64, 66, 1.00);background-color:transparent;}.cl-46e2bbd4{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-46e2bbde{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-46e2ced0{width:0.75in;background-color:rgba(0, 128, 139, 1.00);vertical-align: middle;border-bottom: 0.75pt solid rgba(255, 255, 255, 1.00);border-top: 0.75pt solid rgba(255, 255, 255, 1.00);border-left: 0.75pt solid rgba(255, 255, 255, 1.00);border-right: 0.75pt solid rgba(255, 255, 255, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-46e2ceda{width:0.75in;background-color:rgba(0, 128, 139, 1.00);vertical-align: middle;border-bottom: 0.75pt solid rgba(255, 255, 255, 1.00);border-top: 0.75pt solid rgba(255, 255, 255, 1.00);border-left: 0.75pt solid rgba(255, 255, 255, 1.00);border-right: 0.75pt solid rgba(255, 255, 255, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-46e2cee4{width:0.75in;background-color:rgba(242, 242, 242, 1.00);vertical-align: middle;border-bottom: 0.75pt solid rgba(255, 255, 255, 1.00);border-top: 0.75pt solid rgba(255, 255, 255, 1.00);border-left: 0.75pt solid rgba(255, 255, 255, 1.00);border-right: 0.75pt solid rgba(255, 255, 255, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-46e2cee5{width:0.75in;background-color:rgba(242, 242, 242, 1.00);vertical-align: middle;border-bottom: 0.75pt solid rgba(255, 255, 255, 1.00);border-top: 0.75pt solid rgba(255, 255, 255, 1.00);border-left: 0.75pt solid rgba(255, 255, 255, 1.00);border-right: 0.75pt solid rgba(255, 255, 255, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}OzoneSolar.RWindTempMonthDayMonth Name411907.46751May361188.07252May1214912.67453May1831311.56254May14.35655May2814.96656May"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/theme_gt_aagi.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the AAGI Theme to a gt Object — theme_gt_aagi","title":"Apply the AAGI Theme to a gt Object — theme_gt_aagi","text":"Apply AAGI theme gt.  AAGI formatted table body grey teal header white header font. Header text bold, text columns left aligned, columns right aligned.","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/theme_gt_aagi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the AAGI Theme to a gt Object — theme_gt_aagi","text":"","code":"theme_gt_aagi(x)"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/theme_gt_aagi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the AAGI Theme to a gt Object — theme_gt_aagi","text":"x gt object","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/theme_gt_aagi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply the AAGI Theme to a gt Object — theme_gt_aagi","text":"formatted gt object","code":""},{"path":[]},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/theme_gt_aagi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply the AAGI Theme to a gt Object — theme_gt_aagi","text":"","code":"library(gt) library(dplyr) gt <- head(airquality) |>   mutate(`Month Name` = \"May\") |>   gt() gt <- theme_gt_aagi(gt) gt     Ozone       Solar.R       Wind       Temp       Month       Day       Month Name     41 190 7.4 67 5 1 May36 118 8.0 72 5 2 May12 149 12.6 74 5 3 May18 313 11.5 62 5 4 MayNA NA 14.3 56 5 5 May28 NA 14.9 66 5 6 May"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/watermark.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Watermark Annotation Layer to a ggplot2 Object — watermark","title":"Add a Watermark Annotation Layer to a ggplot2 Object — watermark","text":"Add Watermark Annotation Layer ggplot2 Object","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/watermark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Watermark Annotation Layer to a ggplot2 Object — watermark","text":"","code":"watermark(   watermark,   fontsize = 120,   colour = \"grey90\",   alpha = 0.1,   fontface = \"bold\",   angle = 22 )"},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/watermark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Watermark Annotation Layer to a ggplot2 Object — watermark","text":"watermark String added watermark fontsize Font size colour Font colour alpha Alpha (transparency; lower number = transparent) fontface Font face (\"bold\" default) angle Angle watermark","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/watermark.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add a Watermark Annotation Layer to a ggplot2 Object — watermark","text":"Matt Cowgill Mackey","code":""},{"path":"https://aagi-org-au-public.github.io/AAGIThemes/reference/watermark.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Watermark Annotation Layer to a ggplot2 Object — watermark","text":"","code":"library(ggplot2) # First, start with a plot: p <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point() + theme_aagi()  # Then add a watermark:  p + watermark(\"DRAFT\")"},{"path":[]}]
